'use strict';

var Atools = require('apipost-tools');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var Atools__default = /*#__PURE__*/_interopDefaultLegacy(Atools);

var HTTPSnippet = require('httpsnippet');
var har2languages = /** @class */ (function () {
    function har2languages() {
        this.languages = {
            shell: ['curl', 'httpie', 'wget'],
            c: ['libcurl'],
            clojure: ['clj_http'],
            csharp: ['httpclient', 'restsharp'],
            go: ['native'],
            http: ['1.1'],
            java: ['asynchttp', 'nethttp', 'okhttp', 'unirest'],
            javascript: ['axios', 'fetch', 'jquery', 'xhr'],
            kotlin: ['okhttp'],
            node: ['axios', 'fetch', 'native', 'request', 'unirest'],
            objc: ['nsurlsession'],
            ocaml: ['cohttp'],
            php: ['curl', 'http1', 'http2'],
            powershell: ['webrequest', 'restmethod'],
            python: ['python3', 'requests'],
            r: ['httr'],
            ruby: ['native'],
            swift: ['nsurlsession']
        };
    }
    har2languages.prototype.convert = function (har, language, type) {
        if (type === void 0) { type = ''; }
        try {
            var snippet = new HTTPSnippet(har);
            var result = snippet.convert(language, type);
            return Atools__default["default"].successResult(result);
        }
        catch (error) {
            return Atools__default["default"].errorResult(String(error));
        }
    };
    return har2languages;
}());

module.exports = har2languages;
